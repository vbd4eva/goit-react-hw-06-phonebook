{"version":3,"sources":["components/ContactList/ContactListItem/ContactListItem.module.css","components/ContactFilter/ContactFilter.module.css","components/ContactList/ContactList.module.css","components/ContactsBook/ContactsBook.module.css","components/ContactAddingForm/ContactAddingForm.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","redux/contacts/contacts-selectors.js","components/ContactAddingForm/ContactAddingForm.js","components/Notification/Notification.js","components/Header/Header.js","components/ContactsBook/ContactsBook.js","components/ContactFilter/ContactFilter.js","components/ContactList/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","itemsReducer","createReducer","state","payload","filter","id","filterReducer","_","combineReducers","items","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","contacts","persistReducer","contactsReducer","devTools","process","persistor","persistStore","getContacts","getFilterValue","getContactListLength","length","getContactList","contactCards","filterValue","name","toLocaleLowerCase","includes","ContactAddingForm","useState","setName","number","setNumber","useSelector","dispatch","useDispatch","stateRange","handleChange","e","currentTarget","value","setState","className","s","form","onSubmit","preventDefault","newContactCart","doubleContact","newContactName","find","toast","onDoubleAddingReaction","handleContactCart","uuidv4","labelContainer","label","labelText","inputText","type","onChange","required","pattern","placeholder","submitBtn","submitBtn__text","Notification","message","Header","title","rank","propClass","titleEl","React","createElement","defaultProps","propTypes","PropTypes","string","isRequired","ContactsBook","children","contactsContainer","ContactFilter","input","actions","ContactListItem","deleteBtn","onClick","notificationMessages","ContactList","contactList","list","map","contact","item","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.676de151.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__37yfT\",\"number\":\"ContactListItem_number__1B8bJ\",\"deleteBtn\":\"ContactListItem_deleteBtn__L7xug\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFilter_label__2_Zmv\",\"input\":\"ContactFilter_input__In7Yp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2Uix5\",\"item\":\"ContactList_item__3k4sE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsContainer\":\"ContactsBook_contactsContainer__2cCyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactAddingForm_form__1Q16m\",\"labelContainer\":\"ContactAddingForm_labelContainer__eH3Ij\",\"label\":\"ContactAddingForm_label__7qC98\",\"labelText\":\"ContactAddingForm_labelText__32hEp\",\"inputText\":\"ContactAddingForm_inputText__208ZX\",\"submitBtn\":\"ContactAddingForm_submitBtn__1q1Tn\",\"submitBtn__text\":\"ContactAddingForm_submitBtn__text__2nmHo\"};","import { createAction  } from '@reduxjs/toolkit';\r\n\r\nexport const addContact = createAction('contacts/Add');\r\n\r\nexport const deleteContact = createAction('contacts/Delete');\r\n\r\nexport const changeFilter = createAction('contacts/ChangeFilter');","import { combineReducers } from 'redux';\r\n\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {addContact, deleteContact, changeFilter} from './contacts-actions';\r\n\r\nconst itemsReducer = createReducer([], {\r\n    [addContact]: (state, { payload }) => [payload, ...state],\r\n    [deleteContact]: (state, { payload }) => state.filter(({ id }) => (id !== payload))\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n    [changeFilter]: (_,{payload})=>payload\r\n})\r\n\r\n\r\n\r\nexport default combineReducers({\r\n    items: itemsReducer,\r\n    filter: filterReducer\r\n});","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport { persistStore, persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER } from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\r\nimport logger from 'redux-logger';\r\n\r\nimport contactsReducer from 'redux/contacts/contacts-reducer';\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n    }\r\n  }), logger];\r\n\r\nconst persistConfig = {\r\n  key: 'root',\r\n  storage,\r\n  blacklist: ['filter']\r\n}\r\n\r\nexport const store = configureStore({  \r\n  reducer:  {\r\n    contacts: persistReducer(persistConfig, contactsReducer)\r\n  },\r\n  middleware,\r\n  devTools: process.env.NODE_ENV === 'development'\r\n});\r\n\r\nexport const persistor = persistStore(store);","export const getContacts = state => state.contacts.items;\r\nexport const getFilterValue = state => state.contacts.filter;\r\nexport const getContactListLength = state => state.contacts.items.length;\r\n\r\nexport const getContactList = state => {\r\n    const contactCards = getContacts(state);\r\n    const filterValue = getFilterValue(state);\r\n\r\n    return contactCards.filter(\r\n        ({ name }) => name.toLocaleLowerCase().includes(filterValue.toLocaleLowerCase())\r\n    );\r\n}\r\n\r\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { toast } from 'react-toastify';\n\nimport {addContact, changeFilter} from 'redux/contacts/contacts-actions';\nimport {getContacts} from 'redux/contacts/contacts-selectors';\n\n\nimport s from './ContactAddingForm.module.css';\n\n\nexport default function ContactAddingForm () { \n    \n    const [name, setName] = useState('');\n    const [number, setNumber] = useState('');\n\n    const contactCards = useSelector(getContacts);\n    const dispatch = useDispatch();\n\n    const stateRange = {\n        name: setName,\n        number: setNumber\n    }\n\n    function handleChange(e) {\n        const { name, value } = e.currentTarget;\n        const setState = stateRange[name];\n        setState(value);\n    }\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (name && number) handleContactCart({ id: uuidv4(), name, number });\n        reset();\n    }\n\n    function reset() { \n        setName('');\n        setNumber('');\n    }\n\n\n    return (\n        <form className={s.form} onSubmit={handleSubmit}>\n            <div className={s.labelContainer}>\n                <label className={s.label}>\n                    <span className={s.labelText}>Name</span>\n                    <input\n                        className={s.inputText}\n                        type=\"text\"\n                        name=\"name\"\n                        value={name}\n                        onChange={handleChange}\n                        required\n                    />\n                </label>\n                <label className={s.label}>\n                    <span className={s.labelText}>Phone</span>\n                    <input\n                        className={s.inputText}\n                        type=\"tel\"\n                        pattern=\"[0-9]{3}-[0-9]{3}-[0-9]{4}\"\n                        name=\"number\"\n                        value={number}\n                        onChange={handleChange}\n                        placeholder=\"067-333-4444\"\n                        required\n                    />\n                </label>\n            </div>\n      \n            <button className={s.submitBtn} type=\"submit\">\n                <span className={s.submitBtn__text}>Add contact</span>\n            </button>\n        </form>\n    );\n\n    \n    function handleContactCart(newContactCart){   \n        const doubleContact = findInContacts(newContactCart.name);  \n        if (doubleContact) { \n            onDoubleAddingReaction(doubleContact);\n            return;\n        }\n        dispatch(addContact(newContactCart));\n    }\n\n    function findInContacts(newContactName) {\n        return contactCards.find(({ name }) => name === newContactName);\n    };\n    \n    function onDoubleAddingReaction(doubleContact) { \n        const { name } = doubleContact; \n        toast(name + ' is already in contacts.');\n        dispatch(changeFilter(name));\n    }  \n}","import PropTypes from 'prop-types'\n\nfunction Notification({message}) {\n    return (\n        <p className=\"messageNotification\">\n            {message}\n        </p>\n    )\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n}\n\nexport default Notification","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nfunction Header({title, rank, className})\r\n{  \r\n    const propClass = (className) ? className : `h${rank}`;\r\n\r\n    const titleEl = React.createElement('h' + rank, { className: propClass}, title);\r\n  \r\n    return (\r\n        <>\r\n            {titleEl}\r\n        </>\r\n    )\r\n}\r\nHeader.defaultProps = {\r\n    rank: \"2\",\r\n}\r\nHeader.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    rank: PropTypes.string.isRequired,\r\n    className: PropTypes.string,\r\n}\r\n\r\nexport default Header\r\n\r\n","import { useSelector } from 'react-redux';\nimport {getContactListLength} from 'redux/contacts/contacts-selectors'\nimport Notification from 'components/Notification/Notification';\nimport Header from 'components/Header/Header';\nimport s from './ContactsBook.module.css';\n \nexport default function ContactsBook({children}) {\n\n    const bookLength = useSelector(getContactListLength);\n\n    if (!bookLength) return <Notification message=\"PhoneBook is emty\" />;\n\n    return (\n        <>\n            <Header title={'Contacts'} />\n                <div className={s.contactsContainer}>\n                    {children}\n                </div>\n        </>\n    )\n}\n","import {useSelector, useDispatch} from 'react-redux';\n\nimport * as actions from 'redux/contacts/contacts-actions';\nimport {getFilterValue} from 'redux/contacts/contacts-selectors';\n\nimport s from './ContactFilter.module.css';\n\nexport default function ContactFilter() {\n    \n    const filterValue = useSelector(getFilterValue);\n    const dispatch = useDispatch();\n    \n    return (\n         <label className={s.label}>\n            Find contacts by name\n            <input\n                className={s.input}\n                 type=\"text\"\n                 name=\"filter\"\n                 value={filterValue}\n                 onChange={(e)=>dispatch(actions.changeFilter(e.currentTarget.value))}\n             />\n         </label>\n    )\n}\n\n","import { useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types'\n\nimport {deleteContact} from 'redux/contacts/contacts-actions';\n\nimport s from './ContactListItem.module.css';\nexport default function ContactListItem({ id, name, number}) {\n    \n    const dispatch = useDispatch();\n\n    return (\n        <>\n            <span className={s.name}>{name}</span> : <span className={s.number}>{number}</span> <button className={s.deleteBtn} type=\"button\" onClick={()=>dispatch(deleteContact(id))} >delete</button>\n        </>\n    )\n}\n\nContactListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n}\n\n","import { useSelector } from 'react-redux';\nimport {getContactList} from 'redux/contacts/contacts-selectors'\n\nimport Notification from 'components/Notification/Notification'\nimport ContactListItem from './ContactListItem/ContactListItem'\nimport s from './ContactList.module.css'\n\nconst notificationMessages = {\n    NOTHING_FINDED: \"is Nothing finded...Try to change request\",\n}\n\nexport default function ContactList() {\n\n    const contactList = useSelector(getContactList)\n\n    if (!contactList.length) return <Notification message={notificationMessages.NOTHING_FINDED} />;\n\n    return (\n        <ul className={s.list}>\n            {contactList.map(\n                (contact) =>\n                (<li key={contact.id} className={s.item}>\n                    <ContactListItem {...contact} />\n                </li>)\n            )}\n        </ul>\n    );\n}\n\n","import { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport ContactAddingForm from 'components/ContactAddingForm/ContactAddingForm';\nimport ContactsBook from 'components/ContactsBook/ContactsBook';\nimport ContactFilter from 'components/ContactFilter/ContactFilter';\nimport ContactList from 'components/ContactList/ContactList';\nimport Header from 'components/Header/Header';\n\nexport default function App() {\n\n  return (\n      <>\n      <Header title={\"Phonebook\"} rank={'1'} />      \n        <ContactAddingForm />\n       \n            <ContactsBook >\n               <ContactFilter />\n        \n              <ContactList />\n            </ContactsBook>        \n        \n        <ToastContainer />\n      </>\n    )\n\n\n\n \n\n} ","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport {store,persistor} from './redux/store';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store} >\n      <PersistGate loading={'Loading...'} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}